/*
 * Copyright (c) 2011, Hartmut Reuter,
 * RZG, Max-Planck-Institut f. Plasmaphysik.
 * All Rights Reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in
 *      the documentation and/or other materials provided with the
 *      distribution.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 *  Module:	    volosdint.xg
 *  System:	    Volser
 */

package AFSVOLOSD_
prefix S

/*
 *   Meaning of flag bits
 */

%#define     SALVAGE_UPDATE    2       /* for "vos salvage" */
%#define     SALVAGE_DECREM    4       /* for "vos salvage" */
%#define     SALVAGE_IGNORE_LINKCOUNTS 16  /* for "vos salvage" */

%#define     EXTRACT_MD5       1       /* for "vos listobjects" */
%#define     EXTRACT_SIZE      2       /* for "vos listobjects" */
%#define     ONLY_HERE         4       /* for "vos listobjects" */
%#define     POL_INDICES       8       /* for "vos listobjects" */
%#define     ONLY_WIPED       16       /* for "vos listobjects" */

%#define     ONLY_BIGGER_MINWIPESIZE   1       /* for vos archvcand */
%#define     FORCE_ARCHCAND            2       /* for vos archvcand */

const SIZE = 1024;

%#define VOLSEROSD_SERVICE	7

struct osd_info {
    afs_uint32 osdid;
    afs_uint32 fids;
    afs_uint32 fids1;   /* fids with no other copy */
    afs_uint64 bytes;
    afs_uint64 bytes1;  /* bytes only stored here */
};
typedef struct osd_info osd_infoList <>;

struct sizerange {
    afs_uint64 maxsize;
    afs_uint64 bytes;
    afs_uint32 fids;
};
typedef struct sizerange sizerangeList <>;

struct hsmcand {
    afs_uint32 volume;
    afs_uint32 vnode;
    afs_uint32 unique;
    afs_uint32 weight;
    afs_uint32 blocks;
};
typedef struct hsmcand hsmcandList <>;

struct volser_kbps {
    afs_uint32 val[96];
};

/*
 * procs must be in order of opcodes!
 */

proc Salvage(
  IN afs_uint32 vid,
  IN afs_int32 flag,
  IN afs_int32 instances,
  IN afs_int32 localinst
) split = 1;

proc GetArchCandidates(
  IN afs_uint64 minsize,
  IN afs_uint64 maxsize,
  IN afs_int32 copies,
  IN afs_int32 maxcandidates,
  IN afs_int32 osd,
  IN afs_int32 flag,
  IN afs_uint32 delay,
  OUT hsmcandList *list
) = 2;

proc ListObjects(
  IN afs_uint32 vid,
  IN afs_int32 flag,
  IN afs_int32 osd,
  IN afs_uint32 minage
) split = 3;

proc Traverse(
  IN afs_uint32 vid,
  afs_uint32 delay,
  afs_int32 flag,
  OUT sizerangeList *srl,
  OUT osd_infoList *list
) = 4;

proc PolicyUsage (
  IN afs_uint32 vid,
  OUT sizerangeList *srl,
  OUT osd_infoList *list
) = 5;

proc OsdSupport (
  OUT afs_int32 *have_it
) = 8;
